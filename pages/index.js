import Head from "next/head";
import Link from "next/link";
import Layout from "../components/Layout";
import styled from "@emotion/styled";
import { alphaSortArrayAscending, createCurriculaObject } from "../utils";
import {
  Accordion,
  AccordionItem,
  AccordionButton,
  AccordionPanel,
  AccordionIcon,
  Box,
} from "@chakra-ui/react";
import Section from "../components/Section";

const NavWrapper = styled.div`
  display: flex;
  flex-direction: column;
`;

const ButtonLink = styled.a`
  text-align: center;
  border: 1px solid var(--dark-green);
  margin-bottom: 0.5rem;
  &:last-child {
    margin-bottom: 0;
  }
  padding: 0.75rem 1.2rem;
  background-color: var(--light-green);
  color: var(--dark-gray);
  border-radius: 3px;
  min-width: 300px;
  &:hover {
    box-shadow: 0 0 2px 1px var(--dark-green);
  }
`;

export default function Home({ curricula }) {
  const spans = [...new Set(curricula.map(({ span }) => span))];
  return (
    <>
      <Head>
        <title>LBPS Curriculum Warehouse</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout>
        <Section id="top">
          <h2>Introductory Heading</h2>
          <p>
            Introductory paragraph explaining how this site is organized. Lorem
            ipsum dolor sit amet consectetur adipisicing elit. Sit
            exercitationem laborum consectetur voluptas recusandae, ab, quo
            voluptates odio ad nisi quod, repudiandae ex iure delectus molestiae
            eum quidem placeat unde.
          </p>
        </Section>
        <Section>
          <h2>Jump to a Grade Span</h2>
          <NavWrapper>
            {spans.map((span) => {
              return (
                <Link key={span} href={`#${span}`} passHref>
                  <ButtonLink>{span}</ButtonLink>
                </Link>
              );
            })}
          </NavWrapper>
        </Section>
        {spans.map((span, i) => {
          let areas = [...new Set(curricula.map(({ area }) => area))];
          alphaSortArrayAscending(areas, "area");
          return (
            <Section key={span + i} id={span} headerText={span}>
              {areas.map((area, j) => {
                let areaCurricula = curricula.filter(
                  (curriculum) =>
                    curriculum.span === span &&
                    curriculum.area === area &&
                    curriculum.published === "TRUE"
                );
                alphaSortArrayAscending(areaCurricula, "title");
                return (
                  <div key={span + i + area + j}>
                    <h3>{area}</h3>
                    <Accordion>
                      {areaCurricula.map((areaCurriculum) => {
                        return (
                          <AccordionItem key={areaCurriculum.title}>
                            {areaCurriculum.title}
                          </AccordionItem>
                        );
                      })}
                    </Accordion>
                  </div>
                );
              })}
            </Section>
          );
        })}
      </Layout>
    </>
  );
}

export async function getStaticProps() {
  const req = await fetch("http://localhost:3000/api/sheets");
  const res = await req.json();
  res.data.shift();
  const curricula = createCurriculaObject(res.data);

  return {
    props: { curricula: curricula },
  };
}
